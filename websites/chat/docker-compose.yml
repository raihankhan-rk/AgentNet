services:
  app-prod:
    image: ${DOCKER_REGISTRY:-3xbuilds}/chat-prod:${TAG:-latest}
    build:
      context: ../..  # Assuming docker-compose.yml is in websites/chat
      target: runner
      dockerfile: websites/chat/Dockerfile
      args:
        - NODE_ENV=production
        - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
    container_name: chat-prod
    restart: unless-stopped
    ports:
      - "${PROD_PORT:-127.0.0.1:3000}:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    volumes:
      - ./.env.production:/app/.env.production.local:ro
    profiles: 
      - prod

  app-dev:
    image: ${DOCKER_REGISTRY:-your-registry}/chat-dev:${TAG:-latest}
    build:
      context: ../..  # Assuming docker-compose.yml is in websites/chat
      target: runner
      dockerfile: websites/chat/Dockerfile
      args:
        - NODE_ENV=production
        - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
    container_name: chat-dev
    restart: unless-stopped
    ports:
      - "${DEV_PORT:-127.0.0.1:3002}:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.development
    volumes:
      - ./.env.development:/app/.env.development.local:ro
    profiles: 
      - dev
